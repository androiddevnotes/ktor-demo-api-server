[versions]
ktor-version = "2.3.12"
kotlin-version = "2.0.20"
logback-version = "1.4.14"
exposed-version = "0.48.0"
postgresql-version = "42.7.2"
dokka-version = "1.9.20"
# Remove the following line if it exists:
jansi-version = "2.4.1"
kotlinx-serialization-version = "1.6.3"
exposed-java-time-version = "0.55.0"
jbcrypt-version = "0.4"
flyway-version = "9.16.0"

[libraries]
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor-version" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor-version" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi-version" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-version" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-version" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-version" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed-version" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed-version" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed-version" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql-version" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor-version" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-version" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor-version" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor-version" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor-version" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor-version" }
dokka-html-plugin = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka-version" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor-version" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-version" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed-java-time-version" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt-version" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway-version" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor-version" }

[bundles]
ktor = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-config-yaml",
    "ktor-server-content-negotiation",
    "ktor-server-auth",
    "ktor-server-auth-jwt",
    "ktor-server-sessions",
    "ktor-server-status-pages",
    "ktor-server-call-logging",
    "ktor-server-swagger"  # Add this line
]
exposed = [
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-java-time"
]
logging = [
    "logback-classic",
    "jansi"
]
serialization = [
    "ktor-serialization-kotlinx-json",
    "kotlinx-serialization-json"
]
testing = [
    "ktor-server-test-host",
    "kotlin-test-junit"
]
database = [
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-java-time",
    "postgresql",
    "flyway-core"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka-version" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }
